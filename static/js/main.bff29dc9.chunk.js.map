{"version":3,"sources":["components/Input/Input.module.css","components/Button/Button.module.css","components/Form/Form.module.css","components/Input/Input.tsx","components/Button/Button.tsx","components/Form/Form.tsx","components/TodoItem/TodoItem.tsx","redux/constants.tsx","components/TodoList/TodoList.tsx","redux/actions/todosActions.tsx","redux/reducers/todoReducer.ts","redux/store.tsx","App.js","reportWebVitals.js","index.js","components/TodoItem/TodoItem.module.css"],"names":["module","exports","Input","onChange","value","className","styles","input","placeholder","Button","text","onClick","button","Form","addNewTodo","useState","todoItem","setTodoItem","form","event","target","trim","TodoItem","onDelete","onComplete","completed","time","showTime","setShowTime","checked","completedTodo","uncompletedTodo","ACTIONS","TodoList","todos","useSelector","state","dispatch","useDispatch","onClickComplete","id","type","onClickDelete","deleteTodo","finishedTodos","reduce","prev","cur","addTodo","map","item","style","color","margin","length","defaultState","store","createStore","action","date","Date","newTodo","Math","random","toString","substring","toLocaleDateString","toLocaleTimeString","newTodos","filter","todo","composeWithDevTools","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bff29dc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2T9KD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3MBPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__16yoR\"};","import { ChangeEventHandler } from 'react';\r\nimport styles from './Input.module.css';\r\n\r\ninterface IProps {\r\n  value: string;\r\n  onChange: ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport const Input = ({ onChange, value }: IProps) => {\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      onChange={onChange}\r\n      value={value}\r\n      placeholder='What I should do?'\r\n    ></input>\r\n  );\r\n};\r\n","import styles from './Button.module.css';\r\n\r\ninterface IProps {\r\n  text: string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Button = ({ text, onClick }: IProps) => {\r\n  return (\r\n    <div>\r\n      <button onClick={onClick} className={styles.button}>\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { Input } from '../Input/Input';\r\nimport { Button } from '../Button/Button';\r\nimport styles from './Form.module.css';\r\nimport { useState } from 'react';\r\n\r\ninterface IProps {\r\n  addNewTodo: (todoItem: string) => void;\r\n}\r\n\r\nexport const Form = ({ addNewTodo }: IProps) => {\r\n  const [todoItem, setTodoItem] = useState<string>('');\r\n\r\n  const handleAddNewTodo = () => {\r\n    addNewTodo(todoItem.trim());\r\n    setTodoItem('');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <Input\r\n        value={todoItem}\r\n        onChange={(event) => {\r\n          setTodoItem(event.target.value);\r\n        }}\r\n      />\r\n      <Button text='Add' onClick={handleAddNewTodo} />\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { Button } from '../Button/Button';\r\nimport styles from './TodoItem.module.css';\r\n\r\ninterface IProps {\r\n  text: string;\r\n  onDelete: () => void;\r\n  onComplete: () => void;\r\n  completed: boolean;\r\n  time: string;\r\n}\r\n\r\nexport const TodoItem = ({\r\n  text,\r\n  onDelete,\r\n  onComplete,\r\n  completed,\r\n  time,\r\n}: IProps) => {\r\n  const [showTime, setShowTime] = useState(false);\r\n\r\n  const toggleShowTime = () => {\r\n    setShowTime(!showTime);\r\n  };\r\n\r\n  const checked = completed ? styles.completedTodo : styles.uncompletedTodo;\r\n\r\n  return (\r\n    <div className={styles.todoItem}>\r\n      <Button text='&#10003;' onClick={onComplete} />\r\n      <div>\r\n        <p className={checked} onClick={toggleShowTime}>\r\n          {text}\r\n        </p>\r\n        {showTime ? <p> {time}</p> : null}\r\n      </div>\r\n      <Button text='&#9747;' onClick={onDelete} />\r\n    </div>\r\n  );\r\n};\r\n","export const ACTIONS = {\r\n  ADD_TODO: 'ADD_TODO',\r\n  COMPLETED: 'COMPLETED',\r\n  DELETE: 'DELETE_TODO',\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Form } from '../Form/Form';\r\nimport { TodoItem } from '../TodoItem/TodoItem';\r\nimport { ITodoState } from '../../redux/reducers/todoReducer';\r\nimport {\r\n  addTodo,\r\n  completedTodo,\r\n  deleteTodo,\r\n} from '../../redux/actions/todosActions';\r\n\r\nexport const TodoList = () => {\r\n  const state = useSelector((state: ITodoState) => state);\r\n  const todos = state.todos;\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickComplete = (id: string) => {\r\n    dispatch(completedTodo(id));\r\n  };\r\n\r\n  const onClickDelete = (id: string) => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const addNewTodo = (text: string) => {\r\n    return text !== '' ? dispatch(addTodo(text)) : null;\r\n  };\r\n\r\n  const finishedTodos = todos.reduce((prev, cur) => {\r\n    if (cur.completed) {\r\n      return prev + 1;\r\n    }\r\n    return prev;\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <Form addNewTodo={addNewTodo} />\r\n      {todos.map((item) => {\r\n        return (\r\n          <TodoItem\r\n            key={item.id}\r\n            text={item.text}\r\n            onComplete={() => onClickComplete(item.id)}\r\n            onDelete={() => onClickDelete(item.id)}\r\n            completed={item.completed}\r\n            time={item.time}\r\n          />\r\n        );\r\n      })}\r\n      <p style={{ color: 'white', margin: '10px' }}>\r\n        Number of tasks: {todos.length}\r\n      </p>\r\n      <p style={{ color: 'white', margin: '10px  10px 0' }}>\r\n        Finished: {finishedTodos}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import { ACTIONS } from '../constants';\r\n\r\nexport const addTodo = (text: string) => {\r\n  return {\r\n    type: ACTIONS.ADD_TODO,\r\n    text: text,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id: string) => {\r\n  return {\r\n    type: ACTIONS.DELETE,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const completedTodo = (id: string) => {\r\n  return {\r\n    type: ACTIONS.COMPLETED,\r\n    id: id,\r\n  };\r\n};\r\n","import { ACTIONS } from '../constants';\r\nexport interface ITodoItem {\r\n  id: string;\r\n  text: string;\r\n  completed: boolean;\r\n  time: string;\r\n}\r\n\r\nexport interface ITodoState {\r\n  todos: ITodoItem[];\r\n}\r\n\r\nconst defaultState: ITodoState = {\r\n  todos: [],\r\n};\r\n\r\nexport const todoReducer = (state = defaultState, action: any) => {\r\n  if (action.type === ACTIONS.ADD_TODO) {\r\n    const date = new Date();\r\n    const newTodo = {\r\n      id: 'id' + Math.random().toString().substring(3),\r\n      text: action.text,\r\n      completed: false,\r\n      time: ` Was created: ${date.toLocaleDateString()} ${date.toLocaleTimeString()}`,\r\n    };\r\n\r\n    const newTodos = [...state.todos, newTodo];\r\n    return {\r\n      todos: newTodos,\r\n    };\r\n  }\r\n\r\n  if (action.type === ACTIONS.DELETE) {\r\n    const newTodos = state.todos.filter((todo) => todo.id !== action.id);\r\n    return {\r\n      todos: newTodos,\r\n    };\r\n  }\r\n  if (action.type === ACTIONS.COMPLETED) {\r\n    const newTodos = state.todos.map((todo) => {\r\n      if (todo.id === action.id) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    return {\r\n      todos: newTodos,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { todoReducer } from './reducers/todoReducer';\r\n\r\nexport const store = createStore(todoReducer, composeWithDevTools());\r\n","import './App.css';\r\nimport { TodoList } from './components/TodoList/TodoList.tsx';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Provider store={store}>\r\n        <TodoList />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"TodoItem_todoItem__3gKgX\",\"completedTodo\":\"TodoItem_completedTodo__2-xSI\",\"uncompletedTodo\":\"TodoItem_uncompletedTodo__1KAjm\"};"],"sourceRoot":""}